加速度计算
        private var lastMove:int = 0;
        private var v0:Number = 0;

        private function evalLinearVel(a:Number, t:int, maxVel:Number):Number {
            var v:Number = v0 + a * t / 1000;
            if (a > 0) {
                v = v > maxVel ? maxVel : v;
            } else {
                v = v < maxVel ? maxVel : v;
                v = v > v0 ? v0 : v;
            }
            //_logger.debug(v0, a, t, maxVel, v);
            return v;
        }
        
        public function move(type:int):void {
            if (type != lastMove) {
                lastMove = type;
                v0 = actor.linearVel.length;
            }
        }
        
        public function backward(t:int = -1):void {
            move(BACKWARD);
            var v:Number = evalLinearVel(-32, t, -20);
            
            actor.linearVel = new Vector2D(
                v * Math.cos(actor.angle),
                v * Math.sin(actor.angle));
            actor.angularVel *= 0.8;
        }
        
        public function forward(t:int = -1):void {
            move(FORWARD);
            var v:Number = evalLinearVel(24, t, 40);
            
            actor.linearVel = new Vector2D(
                v * Math.cos(actor.angle),
                v * Math.sin(actor.angle));
            actor.angularVel *= 0.8;
        }

